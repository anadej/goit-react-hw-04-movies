{"version":3,"sources":["services/api.js","components/searchbar/SearchFormStyled.js","components/searchbar/SearchForm.js","pages/MoviPageStyled.js","pages/MoviesPage.js"],"names":["base_URL","API_KEY","fetchTrendingToday","a","axios","get","then","res","data","results","console","log","fetchDetailsMovie","movieId","fetchSearchMovie","query","fetchMovieCredits","fetchMoviesDetails","SearchFormStyled","styled","div","SearchForm","state","onHandleChange","e","setState","target","value","onHandleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","MoviePageStyled","MoviesPage","foundMovies","isLoading","onSearchSubmit","response","history","push","search","location","substr","map","movie","to","pathname","id","from","src","poster_path","alt","title","React"],"mappings":"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","file":"static/js/movies-search-page.3c21fa1a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst base_URL = \"https://api.themoviedb.org/3\";\r\n\r\nconst API_KEY = \"afd2c986c5adb63f9553e5d223b5cb34\";\r\n\r\nexport const fetchTrendingToday = async () => {\r\n  try {\r\n    return await axios\r\n      .get(base_URL + `/trending/movie/day?api_key=` + API_KEY)\r\n      .then((res) => res.data.results);\r\n  } catch (error) {\r\n    console.log(`error`, error);\r\n  }\r\n};\r\n\r\nexport const fetchDetailsMovie = async (movieId) => {\r\n  try {\r\n    return await axios\r\n      .get(base_URL + `/movie/` + movieId + `?api_key=` + API_KEY)\r\n      .then((res) => res.data);\r\n  } catch (error) {\r\n    console.log(`error`, error);\r\n  }\r\n};\r\n\r\nexport const fetchSearchMovie = async (query) => {\r\n  try {\r\n    return await axios\r\n      .get(base_URL + `/search/movie?api_key=` + API_KEY + `&query=` + query)\r\n      .then((res) => res.data.results);\r\n  } catch (error) {\r\n    console.log(`error`, error);\r\n  }\r\n};\r\n\r\nexport const fetchMovieCredits = async (movieId) => {\r\n  try {\r\n    return await axios\r\n      .get(base_URL + `/movie/` + movieId + `/credits?api_key=` + API_KEY)\r\n      .then((res) => res.data);\r\n  } catch (error) {\r\n    console.log(`error`, error);\r\n  }\r\n};\r\n\r\nexport const fetchMoviesDetails = async (movieId) => {\r\n  try {\r\n    return await axios\r\n      .get(\r\n        base_URL +\r\n          `/movie/` +\r\n          movieId +\r\n          `/reviews?api_key=` +\r\n          API_KEY +\r\n          `&page=1`\r\n      )\r\n      .then((res) => res.data);\r\n  } catch (error) {\r\n    console.log(`error`, error);\r\n  }\r\n};\r\n\r\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&page=1\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchFormStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 60px;\r\n  padding: 0 40px;\r\n  margin-bottom: 10px;\r\n  background-color: #424242;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  .SearchForm {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n  }\r\n  .SearchForm-button {\r\n    display: inline-block;\r\n    width: 40px;\r\n    height: 40px;\r\n    border: 0;\r\n    background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\r\n    background-size: 40%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    opacity: 0.6;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    cursor: pointer;\r\n    outline: none;\r\n  }\r\n\r\n  .SearchForm-button:hover {\r\n    opacity: 1;\r\n  }\r\n\r\n  .SearchForm-button-label {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n  }\r\n\r\n  .SearchForm-input {\r\n    display: inline-block;\r\n    width: 100%;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n  }\r\n\r\n  .SearchForm-input::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { SearchFormStyled } from \"./SearchFormStyled\";\r\n\r\nclass SearchForm extends Component {\r\n  state = { query: \"\" };\r\n\r\n  onHandleChange = (e) => {\r\n    this.setState({ query: e.target.value });\r\n  };\r\n\r\n  onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SearchFormStyled>\r\n        <form className=\"SearchForm\" onSubmit={this.onHandleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Enter movies name\"\r\n            onChange={this.onHandleChange}\r\n          />\r\n        </form>\r\n      </SearchFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MoviePageStyled = styled.div`\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n\r\n  .homeTrendTitle {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .moviesSearchList {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-left: -5px;\r\n    margin-top: -5px;\r\n  }\r\n\r\n  .movieSearchItem {\r\n    margin-left: 5px;\r\n    margin-top: 5px;\r\n    flex-basis: calc((100% - 25px) / 5);\r\n    text-align: center;\r\n  }\r\n\r\n  .movieSearchImage {\r\n    width: 100%;\r\n\r\n    &:hover {\r\n      transform: scale(1.03);\r\n      cursor: cursor;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchForm from \"../components/searchbar/SearchForm\";\r\nimport { fetchSearchMovie } from \"../services/api\";\r\nimport { MoviePageStyled } from \"./MoviPageStyled\";\r\n\r\nclass MoviesPage extends React.Component {\r\n  state = {\r\n    foundMovies: [],\r\n    isLoading: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    if (!location.search) return;\r\n    try {\r\n      const response = await fetchSearchMovie(location.search.substr(6));\r\n      this.setState({ foundMovies: [...response] });\r\n    } catch (error) {\r\n      console.log(`error`, error);\r\n    }\r\n  }\r\n\r\n  onSearchSubmit = async (query) => {\r\n    this.setState({ foundMovies: [], query: \"\", isLoading: true });\r\n    try {\r\n      const response = await fetchSearchMovie(query);\r\n      this.setState({ foundMovies: [...response] });\r\n      this.props.history.push({ search: `query=${query}` });\r\n    } catch (error) {\r\n      console.log(`error`, error);\r\n    }\r\n    this.setState({ isLoading: false });\r\n  };\r\n\r\n  render() {\r\n    const { foundMovies } = this.state;\r\n    return (\r\n      <MoviePageStyled>\r\n        <SearchForm onSubmit={this.onSearchSubmit} />\r\n        <ul className=\"moviesSearchList\">\r\n          {foundMovies.map((movie) => (\r\n            <li className=\"movieSearchItem\" key={movie.id}>\r\n              <Link\r\n                className=\"movieSearchLink\"\r\n                to={{\r\n                  pathname: `/movies/${movie.id}`,\r\n                  state: {\r\n                    from: this.props.location, //передаем целый location в окно MovieDetailsPage\r\n                  },\r\n                }}\r\n              >\r\n                <img\r\n                  className=\"movieSearchImage\"\r\n                  src={`https://www.themoviedb.org/t/p/w300${movie.poster_path}`}\r\n                  alt={movie.title}\r\n                />\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </MoviePageStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}